<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soecode.lyf.mapper.ShoppingMapper">
    <resultMap id="BaseResultMap" type="com.soecode.lyf.entity.Shopping">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="commodityId" property="commodityId" jdbcType="INTEGER"/>
        <result column="userIphone" property="userIphone" jdbcType="VARCHAR"/>
        <result column="createData" property="createData" jdbcType="VARCHAR"/>
        <result column="updateData" property="updateData" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, commodityId, userIphone, createData, updateData
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from shopping
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shopping
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.soecode.lyf.entity.Shopping">
    insert into shopping (id, commodityId, userIphone, 
      createData, updateData)
    values (#{id,jdbcType=INTEGER}, #{commodityId,jdbcType=INTEGER}, #{userIphone,jdbcType=VARCHAR}, 
      #{createData,jdbcType=VARCHAR}, #{updateData,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.soecode.lyf.entity.Shopping">
        insert into shopping
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="commodityId != null">
                commodityId,
            </if>
            <if test="userIphone != null">
                userIphone,
            </if>
            <if test="createData != null">
                createData,
            </if>
            <if test="updateData != null">
                updateData,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="commodityId != null">
                #{commodityId,jdbcType=INTEGER},
            </if>
            <if test="userIphone != null">
                #{userIphone,jdbcType=VARCHAR},
            </if>
            <if test="createData != null">
                #{createData,jdbcType=VARCHAR},
            </if>
            <if test="updateData != null">
                #{updateData,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.soecode.lyf.entity.Shopping">
        update shopping
        <set>
            <if test="commodityId != null">
                commodityId = #{commodityId,jdbcType=INTEGER},
            </if>
            <if test="userIphone != null">
                userIphone = #{userIphone,jdbcType=VARCHAR},
            </if>
            <if test="createData != null">
                createData = #{createData,jdbcType=VARCHAR},
            </if>
            <if test="updateData != null">
                updateData = #{updateData,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.soecode.lyf.entity.Shopping">
    update shopping
    set commodityId = #{commodityId,jdbcType=INTEGER},
      userIphone = #{userIphone,jdbcType=VARCHAR},
      createData = #{createData,jdbcType=VARCHAR},
      updateData = #{updateData,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <select id="selectShoppingList" parameterType="java.lang.String" resultType="java.util.Map">
     SELECT
        commodityId, userIphone, createData, updateData
       FROM shopping
    where ${where}
  </select>

    <insert id="insertAll" parameterType="com.soecode.lyf.entity.Shopping">
    insert into shopping ( commodityId, userIphone,
      createData, updateData)
    values ( #{commodityId,jdbcType=INTEGER}, #{userIphone,jdbcType=VARCHAR},
      #{createData,jdbcType=VARCHAR}, #{updateData,jdbcType=VARCHAR})
  </insert>

</mapper>